@model AllMusicQueryModel

@inject SignInManager<Guest> SignInManager
@inject UserManager<Guest> UserManager

@{
    ViewData["Title"] = "Music Library";
}

<div class="container">
    @if (User.IsAdmin())
    {
        @if (!string.IsNullOrWhiteSpace(Model.ModelError))
        {
            <div class="text-center alert-info">
                <h3>@Model.ModelError</h3>
            </div>
        }
        else
        {
            <h1 style="margin: 2%; text-align: center;">@ViewData["Title"]</h1>

            <form method="get">
                <div class="row">
                    <div class="form-group col-md-4">
                        <label asp-for="SearchTerm"></label>
                        <input asp-for="SearchTerm" class="form-control" placeholder="Search..." />
                    </div>

                    <div class="form-group col-md-4">
                        <div class="form-group">
                            <label asp-for="Sorting"></label>
                            <select asp-for="Sorting" class="form-control">
                                <option value="0" selected>Album Title Ascending</option>
                                <option value="1">Album Title Descenging</option>
                                <option value="2">Song Name Ascending</option>
                                <option value="3">Song Name Descending</option>
                                <option value="4">Rating Ascending</option>
                                <option value="5">Rating Descending</option>
                            </select>
                        </div>
                    </div>
                </div>
                <input type="submit" class="btn btn-primary d-none" value="Search" />
            </form>

            var previousPage = Model.CurrentPage - 1;
            if (previousPage < 1)
            {
                previousPage = 1;
            }

            var lastPage = Math.Ceiling((double)Model.TotalResults / AllMusicQueryModel.AlbumsPerPage);

            <div class="row">
                <div class="col-md-6">
                    <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                       asp-controller="Music"
                       asp-action="All"
                       asp-route-currentPage="@previousPage"
                       asp-route-searchTerm="@Model.SearchTerm"
                       asp-route-sorting="@Model.Sorting"
                       asp-route-showOnlySongs="@Model.ShowOnlySongs">&lt;&lt;</a>
                </div>

                @{
                    var shouldButtonBeDisabled = Model.CurrentPage == lastPage || !Model.Albums.Any();
                }

                <div class="col-md-6">
                    <a class="btn btn-primary float-right @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                       asp-controller="Music"
                       asp-action="All"
                       asp-route-currentPage="@(Model.CurrentPage++)"
                       asp-route-searchTerm="@Model.SearchTerm"
                       asp-route-sorting="@Model.Sorting"
                       asp-route-showOnlySongs="@Model.ShowOnlySongs">&gt;&gt;</a>
                </div>
            </div>

            if (!Model.Albums.Any())
            {
                <h2 class="text-center">There are no music albums that match your search criteria.</h2>
            }


            if (Model.ShowOnlySongs)
            {
                <partial name="_SongsPartial" model="@Model.Songs" />
            }
            else
            {
                <partial name="_AlbumsPartial" model="@Model.Albums" />
            }
        }
    }
    else
    {
        <div class="text-black-50">
            <h5>Oops!</h5>
            <h5>You are not authorized to view the contents of this web page.</h5>
            <h5>Please contact us for more information.</h5>
            <a class="btn btn-primary" asp-controller="Home" asp-action="Index">Return to Home Page</a>
        </div>
    }
</div>